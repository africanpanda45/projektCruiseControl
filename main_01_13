package Projektarbete;

import javafx.application.Application;
import javafx.geometry.Insets;
import javafx.geometry.Orientation;
import javafx.scene.Group;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.effect.DropShadow;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

import java.sql.*;
import java.util.ArrayList;
import java.util.Optional;

public class Projektarbetet2 extends Application {
    public static void main(String[] args) {
        launch(args);
    }
    ListView<String> destLista = new ListView<>();
    ComboBox<String> datumLista = new ComboBox <>();
    ArrayList<String> destinationLagring = new ArrayList<>();
    ArrayList<String> fartygLagring = new ArrayList<>();

    public String hämtaBåt(String båt){
        try(
                Connection conn = DriverManager.getConnection(
                        "jdbc:mysql://localhost/cruiscontrol?useSSL=false&serverTimezone=UTC", "root", "abc123" )){

            Statement statement = conn.createStatement();
            ResultSet resultat = statement.executeQuery("SELECT Fartygsnamn FROM FARTYG WHERE DATUM ='"+datumLista.getSelectionModel().getSelectedItem()+"'");
            while(resultat.next()){
                båt = resultat.getString(1);
                System.out.println(båt);
            }
        } catch (SQLException e){
            System.out.println("Något gick fel: "+e.getMessage());
        }
        return båt;
    }

    private String hämtaDatum(String datum){
        Text valdDest = new Text();
        valdDest.setText(destinationLagring.get(destLista.getSelectionModel().getSelectedIndex()));
        datumLista.getItems().removeAll(datumLista.getItems());
        String valdDestination= destinationLagring.get(destLista.getSelectionModel().getSelectedIndex());
        try(
                Connection conn = DriverManager.getConnection(
                        "jdbc:mysql://localhost/cruiscontrol?useSSL=false&serverTimezone=UTC", "root", "abc123" )){

            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery("SELECT DATUM FROM FARTYG WHERE Destination ='" + valdDestination +"'"); //Query för att välja ut album baserat på vald artist
            while(result.next()) {
                datum=result.getString(1);
                datumLista.getItems().add(datum);
            }
        } catch (SQLException e){
            System.out.println("Något gick fel: "+e.getMessage()); //skickar ut ev. felmeddelanden
        }
        return datum;
    }

    @Override
    public void start(Stage primaryStage) {
        //Innehåll som inte ändrar sig när du klickar på någon av knapparna i menyerna.
        Image bokaImg = new Image("file:blueSeaScaled.jpg");
        ImageView bokaImgView = new ImageView(bokaImg);
        try (
                Connection conn = DriverManager.getConnection( //Testar att koppla upp sig
                        "jdbc:mysql://localhost/cruiscontrol?useSSL=false&serverTimezone=UTC", "root", "abc123")) {

            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery("SELECT DISTINCT Destination FROM Fartyg");
            String temp = "";           //Temp string för att lagra namn och peta in i arraylisten
            while (result.next()) {
                temp = result.getString("Destination");
                destinationLagring.add(temp);
                destLista.getItems().add(temp);
            }

        } catch (
                SQLException e) {       //Om något går fel, printa ut felmeddelande
            System.out.println("Något gick fel: " + e.getMessage());
        }

        try (
                Connection conn = DriverManager.getConnection( //Testar att koppla upp sig
                        "jdbc:mysql://localhost/cruiscontrol?useSSL=false&serverTimezone=UTC", "root", "abc123")) {

            Statement state = conn.createStatement();
            ResultSet result = state.executeQuery("SELECT Fartygsnamn FROM Fartyg");
            String temp = "";           //Temp string för att lagra namn och peta in i arraylisten
            while (result.next()) {
                temp = result.getString("Fartygsnamn");
                fartygLagring.add(temp);
            }

        } catch (
                SQLException e) {       //Om något går fel, printa ut felmeddelande
            System.out.println("Något gick fel: " + e.getMessage());
        }


        //Statisk pane som aldrig ändras av menyvalen
        Pane top = new Pane();
        top.setPrefSize(1273, 150);

        //Dynamisk pane som ändras av menyvalen
        Pane bottom = new Pane();
        bottom.setLayoutX(0);
        bottom.setLayoutY(150);
        bottom.setPrefSize(1273, 1123);
        //Bakgrund för logga
        Rectangle bakgrund = new Rectangle(0, 0, 1273, 150);
        bakgrund.setFill(Color.DODGERBLUE);

        //LogoText
        Label logaText = new Label("Cruise Control");
        logaText.setFont(Font.font("Palatino Linotype", 68));
        logaText.setLayoutX(430);
        logaText.setLayoutY(15);
        logaText.setTextFill(Color.WHITE);
        //Effect för logga + tilläggning
        DropShadow skugga = new DropShadow();
        logaText.setEffect(skugga);


        Rectangle textBox1 = new Rectangle(340, 10, 620, 480);
        textBox1.setFill(Color.LINEN);

        //Menyval för de olika knapparna
        ListView<String> menuVal = new ListView<>();
        menuVal.setPrefWidth(575);
        menuVal.setPrefHeight(30);
        menuVal.setLayoutX(362);
        menuVal.setLayoutY(120);
        menuVal.setOrientation(Orientation.HORIZONTAL);
        menuVal.setPadding(new Insets(0, 0, 0, 0));
        menuVal.setBackground(new Background(new BackgroundFill(Color.ANTIQUEWHITE, null, null)));

        //Lägger till knappar / items till menyn.
        menuVal.getItems().addAll("Hem", "Utvalda resor", "Destinationer", "Ombord på våra fartyg", "Samarbetspartners", "Kontakt", "Om oss"
        );

        //Lägger till en listener som avgör om det klickas eller ej och sätter vad som ska hända om man klickar på menyn.
        menuVal.getSelectionModel().selectedIndexProperty().addListener((v, oldValue, newValue) -> {
            int a = menuVal.getSelectionModel().getSelectedIndex();
            if (a == 0) //Hem
            {
                hemSida(bottom,bokaImgView,textBox1);
            }
            if (a == 1) //Boka
            {
                bokaNu(bottom,bokaImgView,textBox1);
            }
            if (a == 2)//Destinationer
            {
                destinationer(bottom,bokaImgView,textBox1,destLista,datumLista);
            }
            if (a == 3) //Ombord på fartyg
            {
                ombord(bottom,bokaImgView,textBox1);
            }
            if (a == 4) //Samarbetspartners
            {
                samarbetspartners(bottom,bokaImgView,textBox1);
            }
            if (a == 5) //Kontakt
            {
                kontakt(bottom,bokaImgView,textBox1);
            }
            if (a == 6)//Om oss
            {
                omOss(bottom,bokaImgView,textBox1);
            }
        });

        //Lägger till allt i top-delen / panen
        top.getChildren().addAll(bakgrund, logaText, menuVal);

        //Anropar förstasidan inför start
        hemSida(bottom,bokaImgView,textBox1);

        Group root = new Group(top, bottom);
        Scene scene = new Scene(root, 1273, 645);
        primaryStage.setScene(scene);
        primaryStage.show();
    }

    private Pane destinationer(Pane bottom, ImageView bokaImgView, Rectangle textBox1,ListView<String> destLista,ComboBox<String> datumLista){
       destLista.setLayoutX(350); destLista.setLayoutY(30);
       datumLista.setLayoutX(630); datumLista.setLayoutY(30);
        bottom.getChildren().removeAll(bottom.getChildren());
        Button gåVidare = new Button ("Gå vidare");
        gåVidare.setLayoutX(800); gåVidare.setLayoutY(450);
        Text valdDest = new Text ("");
        Text valdBåt = new Text("");
        Text valtDatum = new Text(""); valtDatum.setLayoutX(373); valtDatum.setLayoutY(340);
        Button bakåt = new Button("Bakåt"); bakåt.setLayoutY(450);bakåt.setLayoutX(900);
        String datum="";
        String båt="";
        destLista.getSelectionModel().selectedIndexProperty().addListener((v, oldValue, newValue) -> {
            valdDest.setText(destinationLagring.get(destLista.getSelectionModel().getSelectedIndex()));
            valtDatum.setText(hämtaDatum(datum));
        });
        datumLista.getSelectionModel().selectedIndexProperty().addListener((v, oldValue, newValue) -> {
            valdBåt.setText(hämtaBåt(båt));
        });

        gåVidare.setOnAction(event -> {
            if(valtDatum.getText().isEmpty()){
                Alert felDatum = new Alert (Alert.AlertType.INFORMATION);
                felDatum.setContentText("Vänligen välj ett datum");
                felDatum.showAndWait();
            }
            else {
                antalRes(bottom, bokaImgView, textBox1, valdDest, valtDatum, valdBåt, bakåt);
            }
        });

        bottom.getChildren().addAll(bokaImgView,textBox1,destLista,gåVidare,datumLista);
        return bottom;
    }



    private Pane datumMetod(Pane bottom, ImageView bokaImgView, Rectangle textBox1, Text valdDest, Text valdBåt, Button bakåt){
        bottom.getChildren().removeAll(bottom.getChildren());
        datumLista.getItems().removeAll(datumLista.getItems());
        String båt="";
        String datum="";
        int radhojd = 23; //Variabel för att autojustera höjden på listviewen
        Text väljDatum = new Text("Välj det datum du vill resa"); väljDatum.setLayoutX(373); väljDatum.setLayoutY(25);
        datumLista.setLayoutX(373); datumLista.setLayoutY(40);
        datumLista.setPrefHeight(datumLista.getItems().size()*radhojd+2); datumLista.setPrefWidth(125);
        Button välj = new Button("Välj datum"); välj.setLayoutX(800); välj.setLayoutY(450);
        Text valtDatum= new Text(""); valtDatum.setLayoutX(373); valtDatum.setLayoutY(340);
        String valdDestination = valdDest.getText();
        try(Connection conn = DriverManager.getConnection(
                "jdbc:mysql://localhost/cruiscontrol?useSSL=false&serverTimezone=UTC",
                "root", "abc123")) {

            Statement statement = conn.createStatement();
            ResultSet result = statement.executeQuery("SELECT DATUM FROM FARTYG WHERE Destination ='" + valdDestination +"'");

            while (result.next()) {
                datumLista.getItems().addAll(result.getString(1));
            }
        } catch (SQLException ex) {
            ex.getMessage();
        }
        datumLista.getSelectionModel().selectedIndexProperty().addListener((v, oldValue, newValue) -> {
            valtDatum.setText(datumLista.getSelectionModel().getSelectedItem());
        });
        bottom.getChildren().addAll(bokaImgView,textBox1,datumLista,välj,bakåt,väljDatum);
        välj.setOnAction(event ->{
            valdBåt.setText(hämtaBåt(båt));
            if(valtDatum.getText().isEmpty()){
                Alert felDatum = new Alert (Alert.AlertType.INFORMATION);
                felDatum.setContentText("Vänligen välj ett datum");
                felDatum.showAndWait();
            }
            else {
                antalRes(bottom, bokaImgView, textBox1, valdDest, valtDatum, valdBåt, bakåt);
            }
        });
        bakåt.setOnAction(event ->{
            bokaNu(bottom,bokaImgView,textBox1);
        });
        return bottom;
    }

    private Pane bokaNu(Pane bottom, ImageView bokaImgView, Rectangle textBox1){
        bottom.getChildren().removeAll(bottom.getChildren());

        String båt ="";
        Button bakåt = new Button ("Bakåt"); bakåt.setLayoutY(450);bakåt.setLayoutX(900);
        bottom.getChildren().removeAll(bottom.getChildren());
        Text valdDest = new Text("");
        Text valdBåt = new Text(""); valdBåt.setLayoutX(550);valdBåt.setLayoutY(360);

        //Bilder fest
        Image bildFestBat = new Image("file:partyBoatScaled.jpg");
        ImageView festIW = new ImageView(bildFestBat);
        festIW.setPreserveRatio(true);
        festIW.setFitHeight(150); festIW.setX(365); festIW.setY(30);

        //Text för fest båt
        Text festText = new Text("Boka vår festkryssning!");
        festText.setFont(Font.font("Helvetica", 15));
        festText.setY(195); festText.setX(430);

        //Knapp 1 boka festbåt
        Button bokaFest = new Button("Gdynia, Polen");
        bokaFest.setLayoutX(410); bokaFest.setLayoutY(200);
        bokaFest.setOnAction(event -> {
            valdBåt.setText(hämtaBåt(båt));
            valdDest.setText(bokaFest.getText());
            datumMetod(bottom, bokaImgView, textBox1,valdDest,valdBåt,bakåt);
        });

        //Knapp 2 för bokning av festbåt
        Button bokaFest2 = new Button("Havanna, Cuba");
        bokaFest2.setLayoutX(510); bokaFest2.setLayoutY(200);
        bokaFest2.setOnAction(event -> {
            valdBåt.setText(hämtaBåt(båt));
            valdDest.setText(bokaFest2.getText());
            datumMetod(bottom, bokaImgView, textBox1,valdDest,valdBåt,bakåt);
        });


        //Bild Pensionärskryssning
        Image bildOldBat = new Image("file:onboardOldPeopleExploreScaled.JPG");
        ImageView oldIW = new ImageView(bildOldBat);
        oldIW.setPreserveRatio(true);
        oldIW.setFitHeight(150); oldIW.setX(675); oldIW.setY(30);

        //Text för pensionärs båten
        Text textOld = new Text("Boka vår pensionärskryssning!");
        textOld.setFont(Font.font("Helvetica", 15));
        textOld.setY(195); textOld.setX(710);

        //Knapp pensionär
        Button bokaPensionar = new Button("Åland, Sverige");
        bokaPensionar.setLayoutX(760); bokaPensionar.setLayoutY(200);
        bokaPensionar.setOnAction(event -> {
            valdBåt.setText(hämtaBåt(båt));
            valdDest.setText(bokaPensionar.getText());
            datumMetod(bottom, bokaImgView, textBox1,valdDest,valdBåt,bakåt);
        });

        //Bilder familj båt
        Image bildFamilj = new Image("file:onboardChildrenSlideScaled.jpg");
        ImageView familjIW = new ImageView(bildFamilj);
        familjIW.setPreserveRatio(true);
        familjIW.setFitHeight(150); familjIW.setX(390); familjIW.setY(240);

        //Familj text
        Text textFamilj = new Text("Boka våran familjära kryssning!");
        textFamilj.setFont(Font.font("Helvetica", 15));
        textFamilj.setX(400); textFamilj.setY(410);

        //Knapp familj boka
        Button bokaFamilj = new Button("Barcelona, Spanien");
        bokaFamilj.setLayoutX(440); bokaFamilj.setLayoutY(420);
        bokaFamilj.setOnAction(event -> {
            valdBåt.setText(hämtaBåt(båt));
            valdDest.setText(bokaFamilj.getText());
            datumMetod(bottom, bokaImgView, textBox1,valdDest,valdBåt,bakåt);
        });
        //Bilder lyx båt
        Image bildLyx = new Image("file:onboardLuxuryInsideScaled.jpg");
        ImageView lyxIW = new ImageView(bildLyx);
        lyxIW.setPreserveRatio(true);
        lyxIW.setFitHeight(150); lyxIW.setX(695); lyxIW.setY(240);

        //Lyx text
        Text textLyx = new Text("Boka våran lyxiga kryssning!");
        textLyx.setFont(Font.font("Helvetica", 15));
        textLyx.setX(710); textLyx.setY(410);

        //Knapp för bokning av lyx
        Button bokaLyx = new Button("Kapstaden, Sydafrika");
        bokaLyx.setLayoutX(730); bokaLyx.setLayoutY(420);
        bokaLyx.setOnAction(event -> {
            valdBåt.setText(hämtaBåt(båt));
            valdDest.setText(bokaLyx.getText());
            datumMetod(bottom, bokaImgView, textBox1,valdDest,valdBåt,bakåt);

        });

        //Knapp för mer info
        Button knappMerInfo = new Button("Mer info"); knappMerInfo.setLayoutX(620); knappMerInfo.setLayoutY(450);
        knappMerInfo.setOnAction(event -> {
            ombord(bottom, bokaImgView, textBox1);
        });

        bottom.getChildren().addAll(bokaImgView, textBox1, bokaFest, bokaFest2, bokaFamilj, bokaLyx, bokaPensionar, knappMerInfo,
                festIW, festText, oldIW, textOld, familjIW, textFamilj, lyxIW, textLyx);
        return bottom;
    }

    private Pane antalRes(Pane bottom, ImageView bokaImgView, Rectangle textBox1, Text valdDest, Text valtDatum, Text valdBåt, Button bakåt){
        bottom.getChildren().removeAll(bottom.getChildren());
        valdDest.setLayoutY(360); valdDest.setLayoutX(373);
        valdBåt.setLayoutX(550); valdBåt.setLayoutY(360);
        valdDest.setFont(Font.font("Verdana",15));
        Text hyttSort = new Text("Välj antal bäddar i din hytt"); hyttSort.setLayoutX(400); hyttSort.setLayoutY(40);
        ComboBox<String> hytt = new ComboBox<>(); hytt.setLayoutX(400); hytt.setLayoutY(60);
        hytt.setPrefWidth(100);
        hytt.getItems().addAll("1","2","4");

        Text hyttVal = new Text("");
        hyttVal.setLayoutX(140); hyttVal.setLayoutY(400);
        hytt.getSelectionModel().selectedIndexProperty().addListener(ov -> {
            hyttVal.setText(hytt.getSelectionModel().getSelectedItem());
        });

        bakåt.setOnAction(event ->{
            datumMetod(bottom,bokaImgView,textBox1,valdDest,valdBåt,bakåt);
        });


        Text antalRes = new Text("Antal resenärer"); antalRes.setLayoutX(700); antalRes.setLayoutY(40);
        Text pris = new Text("Pris per bädd: 500:-"); pris.setLayoutX(840); pris.setLayoutY(100);
        Text prisResenär = new Text("Pris per resenär: 200:-"); prisResenär.setLayoutX(840); prisResenär.setLayoutY(120);
        TextField resInmat = new TextField(); resInmat.setLayoutX(700); resInmat.setLayoutY(60);resInmat.setPrefWidth(100);
        Button gåVidare = new Button("Gå vidare");
        gåVidare.setLayoutX(800); gåVidare.setLayoutY(450);
        bottom.getChildren().addAll(bokaImgView,textBox1, hytt, resInmat,antalRes,gåVidare,hyttSort,valdDest,valtDatum,valdBåt,bakåt,pris,prisResenär);
        gåVidare.setOnAction(event -> {
            if(Integer.parseInt(resInmat.getText())>Integer.parseInt(hyttVal.getText())){
                Alert mindreResenärer = new Alert(Alert.AlertType.INFORMATION);
                mindreResenärer.setHeaderText("Felmeddelande");
                mindreResenärer.setContentText("Antalet resenärer överstiger antalet bäddar");
                mindreResenärer.showAndWait();
            }
            else {
                Text antalBäddar = new Text (hyttVal.getText());
                Text antalResenärer = new Text(resInmat.getText());
                personInfo(bottom, bokaImgView, textBox1, antalBäddar, antalResenärer, valdDest, valtDatum, valdBåt,bakåt);
            }

        });
        return bottom;
    }

    private Pane personInfo(Pane bottom, ImageView bokaImgView, Rectangle textBox1, Text antalBäddar, Text antalResenärer, Text valdDest,Text valtDatum,Text valdBåt, Button bakåt){
        bottom.getChildren().removeAll(bottom.getChildren());
        Button gåVidare = new Button ("Gå vidare"); gåVidare.setLayoutX(800); gåVidare.setLayoutY(450);
        Text bädd = new Text("Antal bäddar i hytt: "+antalBäddar.getText()); bädd.setLayoutY(380); bädd.setLayoutX(373);
        Text medresenärer = new Text("Medresenärer: "+antalResenärer.getText()); medresenärer.setLayoutY(400); medresenärer.setLayoutX(373);
        Text namn = new Text("Förnamn"); namn.setLayoutX(373); namn.setLayoutY(120);
        Text enamn = new Text("Efternamn");enamn.setLayoutX(373); enamn.setLayoutY(175);
        Text email = new Text("Email"); email.setLayoutX(373); email.setLayoutY(230);
        Text persnr = new Text("Personnummer"); persnr.setLayoutX(373); persnr.setLayoutY(285);
        TextField namnFält = new TextField(); namnFält.setLayoutX(370); namnFält.setLayoutY(130);
        TextField enamnFält = new TextField(); enamnFält.setLayoutX(370); enamnFält.setLayoutY(185);
        TextField emailFält = new TextField(); emailFält.setLayoutX(370); emailFält.setLayoutY(240);
        TextField persnrFält = new TextField(); persnrFält.setLayoutX(370); persnrFält.setLayoutY(295);

        bottom.getChildren().addAll(bokaImgView,textBox1,namnFält,enamnFält,emailFält,persnrFält,namn,enamn,email,persnr,valdDest,valtDatum,valdBåt,bädd,medresenärer,gåVidare,bakåt);

        gåVidare.setOnAction(event -> {
            if (namnFält.getText().isEmpty() || enamnFält.getText().isEmpty()|| emailFält.getText().isEmpty() || persnrFält.getText().isEmpty()){
                Alert enterMore = new Alert(Alert.AlertType.WARNING);
                enterMore.setContentText("Fyll i alla boxarna!");
                enterMore.showAndWait();
            }
            if(persnr.getText().length()<10 || persnr.getText().length()>12){
                Alert felPers = new Alert(Alert.AlertType.INFORMATION);
                felPers.setTitle("Meddelande");
                felPers.setHeaderText("Fel");
                felPers.setContentText("Felaktigt personnummer");
                felPers.showAndWait();
            }
            else {
                namn.setText(namnFält.getText());
                enamn.setText(enamnFält.getText());
                email.setText(emailFält.getText());
                persnr.setText(persnrFält.getText());

                fyllInfo(bottom,bokaImgView,textBox1,antalBäddar,valdDest,antalResenärer,namn,enamn,email,persnr,valtDatum,valdBåt,bädd,medresenärer,bakåt);
            }

        });
        bakåt.setOnAction(event ->{
            antalRes(bottom,bokaImgView,textBox1,valdDest,valtDatum,valdBåt,bakåt);
        });
        return bottom;
    }

    private Pane fyllInfo(Pane bottom, ImageView bokaImgView, Rectangle textBox1, Text antalBäddar, Text valdDest, Text antalResenärer, Text namn, Text enamn, Text email, Text persnr, Text valtDatum,Text valdBåt, Text bädd, Text medresenär, Button bakåt){
        bottom.getChildren().removeAll(bottom.getChildren());
        //Text antalBäddar = new Text("Antal bäddar i hytt: "+ hyttVal.getText()); antalBäddar.setLayoutY(380); antalBäddar.setLayoutX(373);
        //Text antalResenärer = new Text("Antal resenärer: "+resInmat.getText()); antalResenärer.setLayoutY(400); antalResenärer.setLayoutX(373);
        Text valdNamn = new Text("Förnamn: "+namn.getText()); valdNamn.setLayoutY(420); valdNamn.setLayoutX(373);
        Text valdEnamn = new Text("Efternamn: "+enamn.getText()); valdEnamn.setLayoutY(440); valdEnamn.setLayoutX(373);
        Text valdEmail = new Text("Email: "+email.getText()); valdEmail.setLayoutY(460); valdEmail.setLayoutX(373);
        Text valdPersnr = new Text("Personnummer: "+persnr.getText()); valdPersnr.setLayoutY(480); valdPersnr.setLayoutX(373);
        int total = (500*Integer.parseInt(antalBäddar.getText()))+(200*Integer.parseInt(antalResenärer.getText()));
        Text totalpris = new Text("Total kostnad: "+total+":-"); totalpris.setLayoutY(310); totalpris.setLayoutX(373);
        totalpris.setFont(Font.font("Verdana",15));
        Button bekräfta = new Button ("Bekräfta"); bekräfta.setLayoutX(800); bekräfta.setLayoutY(450);

        //FIXA FELHANTERING (EJ BOKSTÄVER TILLÅTNA I PERSNR)

        bottom.getChildren().addAll(bokaImgView,textBox1,bädd,antalResenärer,medresenär,valdDest,valtDatum,valdNamn,valdEnamn,valdEmail,totalpris,valdPersnr,valdBåt,bekräfta,bakåt);
        bekräfta.setOnAction(event -> {
            Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
            alert.setContentText("Är du säker på att du vill bekräfta?");

            Optional<ButtonType> result = alert.showAndWait();
            if (result.get() == ButtonType.OK) {
                try {
                    Class.forName("com.mysql.jdbc.Driver");
                } catch (ClassNotFoundException ex) {
                    System.out.println("Driver did not load");
                }
                try (Connection conn = DriverManager.getConnection(
                        "jdbc:mysql://localhost/cruiscontrol?useSSL=false&serverTimezone=UTC",
                        "root", "abc123")) {

                    if (namn.getText().isEmpty() || enamn.getText().isEmpty() || email.getText().isEmpty() || persnr.getText().isEmpty()) {

                        Alert hej = new Alert(Alert.AlertType.INFORMATION);
                        hej.setTitle("Meddelande");
                        hej.setHeaderText("Fel");
                        hej.setContentText("Fyll i alla fält");
                        hej.showAndWait();

                    }
                    else {

                        PreparedStatement kund = conn.prepareStatement("INSERT INTO kund VALUES (?, ?, ?, ?)");
                        kund.setString(1, persnr.getText());
                        kund.setString(2, namn.getText());
                        kund.setString(3, enamn.getText());
                        kund.setString(4, email.getText());
                        kund.executeUpdate();
                        System.out.println(total);

                        PreparedStatement bokning = conn.prepareStatement("INSERT INTO bokning VALUES (?, ?, ?, ?, ?, ?)");
                        bokning.setString(1, valtDatum.getText());
                        bokning.setString(2, valdDest.getText());
                        bokning.setInt(3, Integer.parseInt(antalBäddar.getText()));
                        bokning.setInt(4, Integer.parseInt(antalResenärer.getText()));
                        bokning.setString(5, persnr.getText());
                        bokning.setInt(6, total);
                        bokning.executeUpdate();

                    }

                } catch(SQLException ex){
                    System.out.println("Something went wrong..." + ex.getMessage());
                }

                Alert Tack = new Alert(Alert.AlertType.INFORMATION);
                Tack.setContentText("Tack för din beställning!");
                Tack.showAndWait();

            };


        });
        bakåt.setOnAction(event ->{
            personInfo(bottom, bokaImgView, textBox1, antalBäddar, antalResenärer, valdDest, valtDatum, valdBåt,bakåt);
        });
        return bottom;
    }
    private Pane ombord(Pane bottom, ImageView bokaImgView, Rectangle textBox1){
        bottom.getChildren().removeAll(bottom.getChildren());

        //Skapar Ombord på fartyg
        Rectangle partyRec = new Rectangle(340, 10, 620, 480);
        partyRec.setFill(Color.LINEN);
        Image party = new Image("file:images/projekt/ships/Alla bilder/partyBoatScaled.jpg");
        ImageView partyB = new ImageView(party);
        partyB.setY(20);
        partyB.setX(365);
        Rectangle partyBox = new Rectangle(365, 140, 260, 98);
        partyBox.setFill(Color.WHITESMOKE);
        partyBox.setStroke(Color.PEACHPUFF);
        Text partyText = new Text(365,150,"Detta fartyget är som gjort för en riktig \n"+
                "fesprisse som kan välja att ta en drink på \n"+
                "någon av de tjugo olika barerna som finns att \n"+
                "välja mellan. Är du mer dansant av dig kan \n" +
                "du någon av de 5 olika dansgolv som finns\n" +
                "tillänglig på fartyget."
        );
        partyText.setFont(Font.font("Helvetica",13));


        Image luxury = new Image("file:images/projekt/ships/Alla bilder/onboardLuxuryInsideScaled.jpg");
        ImageView luxuryL = new ImageView(luxury);
        luxuryL.setY(245);
        luxuryL.setX(365);
        Rectangle luxBox = new Rectangle(365, 380, 260, 98);
        luxBox.setFill(Color.WHITESMOKE);
        luxBox.setStroke(Color.PEACHPUFF);
        Text luxText = new Text(365,390,"Vill du åka på en exklusiv resa är detta \n"+
                "fartyget ett bra val. Njut av femstjärnig \n"+
                "service och mat från alla världens hörn. \n" +
                "Vi kan också erbjuda ett brett utbud av\n" +
                "spatjänster som massage,kallbad osv. ");
        luxText.setFont(Font.font("Helvetica",13));

        Image children = new Image("file:images/projekt/ships/Alla bilder/onboardChildrenSlideScaled.jpg");
        ImageView childrenV = new ImageView(children);
        childrenV.setY(20);
        childrenV.setX(675);
        Rectangle childBox = new Rectangle(675, 140, 260, 98);
        childBox.setFill(Color.WHITESMOKE);
        childBox.setStroke(Color.PEACHPUFF);
        Text childText = new Text(675,150,"Har du barn men vill trots detta  \n" +
                "kunna njuta av en avkopplande semester \n "+
                "är denna resa någonting för dig. På detta  \n" +
                " fartyg erbjuds en mängd olika aktiviteter för  \n" +
                " både barn samt vuxna.");
        childText.setFont(Font.font("Helvetica",13));


        Image oldpeople = new Image("file:images/projekt/ships/Alla bilder/onboardOldPeopleExploreScaled.jpg");
        ImageView opV = new ImageView(oldpeople);
        opV.setY(245);
        opV.setX(675);
        Rectangle oldBox = new Rectangle(675, 380, 260, 98);
        oldBox.setFill(Color.WHITESMOKE);
        oldBox.setStroke(Color.PEACHPUFF);
        Text oldText = new Text(675,390,"För er äldre resenärer som \n" +
                "längtar efter en avkopplande resa är detta\n" +
                "fartyg ett säkert val. Här kan du njuta av en\n" +
                "semester i din egna takt. Aktiviteter som\n "+
                "boule och bridge finns tillängliga");
        oldText.setFont(Font.font("Helvetica",13));


        bottom.getChildren().addAll(bokaImgView, partyRec, partyBox,partyText, luxBox,luxText, childBox, oldBox,oldText , partyB, luxuryL, childrenV, childText, opV);
        return bottom;
    }
    private Pane samarbetspartners(Pane bottom, ImageView bokaImgView, Rectangle textBox1)
    {
        bottom.getChildren().removeAll(bottom.getChildren());

        Text textElwin = new Text(670, 80,"Cruise Control är stolta sammarbetspartners med Elwin & CO." +
                "\nE & CO levererar mat till olika företag och privatpersoner och har " +
                "samarbetsavtal med flera konferensanläggningar, företag och festlokaler i Stockholm.");
        textElwin.setFont(Font.font("Helvetica", 14));
        textElwin.setWrappingWidth(250);

        Rectangle sam = new Rectangle(660,60,270,140);
        sam.setFill(Color.WHITESMOKE);
        sam.setStroke(Color.PEACHPUFF);

        Text textLifeEvent = new Text(670, 270, "För att kunna erbjuda våra kunder med bäst underhållning " +
                "har vi LifeEvent som ansvariga för att erbjuda all er underhållning på våra fartyg. " +
                "De är ledande inom event planering och har vunnit priser som exempelvis \"Nordens Bästa Event företag\".");
        textLifeEvent.setFont(Font.font("Helvetica", 14));
        textLifeEvent.setWrappingWidth(250);

        Rectangle sam1 = new Rectangle(660,250,270,140);
        sam1.setFill(Color.WHITESMOKE);
        sam1.setStroke(Color.PEACHPUFF);

        Image elwinPhoto = new Image("file:images/projekt/samarbete/elwingScaled.jpg");
        ImageView elwin = new ImageView(elwinPhoto);
        elwin.setY(60);
        elwin.setX(360);

        Image lifePhoto = new Image("file:images/projekt/samarbete/lifeEventScaled.jpg");
        ImageView life = new ImageView(lifePhoto);
        life.setY(260);
        life.setX(360);

        bottom.getChildren().addAll(bokaImgView, textBox1, sam,sam1, elwin,life, textElwin, textLifeEvent);
        return bottom;
    }
    private Pane kontakt(Pane bottom, ImageView bokaImgView, Rectangle textBox1){
        bottom.getChildren().removeAll(bottom.getChildren());

        Text RubrikText = new Text(510, 50, "Kontakta Oss");
        Text KontaktText = new Text(365, 90, "För att komma i kontakt med oss se nedan: \n " +
                " \n" +
                "E-Post: kundtjanst@cruisecontrol.se \n " +
                " \n" +
                "Telefontid vardagar \n " +
                "\n" +
                "08:00-1700\n" +
                "\n" +
                "Bokningsfrågor privatperson: 0480-677 677 \n " +
                " \n" +
                "Fakturafrågor privatperson: 0480-688 688 \n " +
                " \n" +
                "Bokningsfrågor företag: 0480-699 699 \n " +
                "\n" +
                "Fakturafrågor företag: 0480-700 000 \n " +
                "\n" +
                "Vi besvarar alla samtal och mail så snabbt som möjligt ! \n");

        KontaktText.setFont(Font.font("Helvetica", FontWeight.BOLD, 15));
        RubrikText.setFont(Font.font("Helvetica", FontWeight.NORMAL, 30));

        bottom.getChildren().addAll(bokaImgView, textBox1, KontaktText, RubrikText);
        return bottom;
    }

    private Pane omOss(Pane bottom, ImageView bokaImgView, Rectangle textBox1){
        bottom.getChildren().removeAll(bottom.getChildren());

        Text rubrikOmOss = new Text(365, 50, "Cruise Control AB");
        rubrikOmOss.setFont(Font.font("Helvetica", FontWeight.BOLD,20));

        Text omOssText = new Text(365, 80, "Cruise Control är Nordens största bokningssajt för kryssningar. Verksamheten drivs från Växjö men vi erbjuder avgångar från flera olika städer.\n" +
                "\n" +
                "Cruise Control AB är ett privatägt företag som har målet att erbjuda er kunder resor för alla tillfällen. Bolaget äger inga fartyg men sammarbetar har sammarbeten med flera stora bolag för att erbjuda en resa till bästa förmånliga pris.\n" +
                "\n" +
                "Verksamheten tar stort ansvar gällande kraven på säkerhet, komfort och miljöhänsyn. Däräför är vi säkra på att våra tjänster som vi erbjuder kommer att vara enligt våra höga krav och kommer att tillfredställa alla våra kunder. Cruise Controls system uppdateras och förbättras regelbundet så att allt via våran hemsida ska fungera så smidigt som möjligt.\n" +
                "\n" +
                "Bolaget jobbar nu med att i framtiden kunna erbjuda hotell för varje destination som vi erbjuder men detta kommer att komma 2022.\n" +
                "\n" +
                "Under 2019 reste 9.8 miljoner passagerare med fartygen och rederiet transporterade närmare 365 000 fraktenheter.\n" +
                "\n" +
                "Cruise Control erbjuder något för alla åldrar och du är välkommen att kontakta oss när du vill!");
        omOssText.setFont(Font.font("Helvetica", 14));
        omOssText.setWrappingWidth(580);
        bottom.getChildren().addAll(bokaImgView, textBox1, rubrikOmOss, omOssText);
        return bottom;
    }

    private Pane hemSida(Pane bottom, ImageView bokaImgView, Rectangle textBox1){
        bottom.getChildren().removeAll(bottom.getChildren());
        //Bakgrunden - finns alla val 0-6 (1-7)
        //ruta för att hålla all text.
        VBox textRutaHem = new VBox();
        textRutaHem.setLayoutX(375);
        textRutaHem.setLayoutY(30);
        Label headerUppLeft = new Label("Boka din nästa upplevelse med oss!");
        headerUppLeft.setFont(Font.font("Helvetica", FontWeight.BOLD, 20));
        Text sidoText = new Text();
        sidoText.setFont(Font.font("Helvetica",14));
        sidoText.setText("Vi är Nordens största bokningssajt för kryssningar. Hos oss hittar du resor inom alla kategorier " +
                "där vi erbjuder alternativ för dig som vill koppla av med familjen eller vill delta i festliga sammanhang och mycket, mycket mer!" +
                "\n\nÄr du intresserad av att festa loss i en vecka? Vill du kanske ta det lugnt i solstolen eller ta med " +
                "barnen på en upplevelse de sent kommer glömma? Cruise Control erbjuder något för alla åldrar." +
                "\n\n" +
                "Läs mer om våra fartyg här" +
                "\n\n" +
                "Läs mer om våra samarbets-\npartners här");

        sidoText.setWrappingWidth(550);
        //Knapp för att visa skeppen
        Image vid = new Image("File:vidareScaled.jpg");
        ImageView vidareView = new ImageView(vid);
        Button visaShips = new Button();
        visaShips.setGraphic(vidareView);
        visaShips.setLayoutX(560);
        visaShips.setLayoutY(208);
        visaShips.setOnAction(event ->{
            ombord(bottom,bokaImgView,textBox1);
        });

        //Knapp för att läser mer om våra sammarbetspartners.
        Image vid2 = new Image("File:vidareScaled.jpg");
        ImageView vidareView2 = new ImageView(vid2);
        Button visaSamP = new Button();
        visaSamP.setGraphic(vidareView2);
        visaSamP.setLayoutX(560);
        visaSamP.setLayoutY(248);
        visaSamP.setOnAction(event -> {
            samarbetspartners(bottom,bokaImgView,textBox1);
        });

        textRutaHem.getChildren().addAll(headerUppLeft,sidoText);
        bottom.getChildren().addAll(bokaImgView,textBox1,textRutaHem,visaSamP,visaShips);
        return bottom;
    }
}
